<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalcular.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X//Z
</value>
  </data>
</root>